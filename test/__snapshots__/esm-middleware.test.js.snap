// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`always adds export default exports when exports is referenced 1`] = `
"const module = {
  exports: {}
};
const exports = module.exports;
!function (t) {
  t(exports);
}(function (e) {
  e.bar = 'foo';
});
export const bar = exports.bar;
export default module.exports;"
`;

exports[`assignment to a property on module.exports object 1`] = `
"import _require from \\"./encode.js\\";
const module = {
  exports: {}
};
const exports = module.exports;
module.exports.encode = _require;
export default module.exports;"
`;

exports[`assignment to property on exports object 1`] = `
"import _require from \\"./properties/Any/regex.js\\";
const module = {
  exports: {}
};
const exports = module.exports;
exports.Any = _require;
export default module.exports;"
`;

exports[`avoid early usage of imported bindings when not needed 1`] = `
"import y from \\"./y.js\\";
export default 'x';"
`;

exports[`caches modules by default 1`] = `"import foo from \\"/node_modules/foo/es/index.js\\";"`;

exports[`can import from directory with index.js file inside 1`] = `"import foo from \\"./foo/index.js\\";"`;

exports[`cjs module whose main field points to an extension-less dest 1`] = `"import foo from \\"/node_modules/foo/index.js\\";"`;

exports[`doesn't crash on export specifiers with no source 1`] = `
"import foo from \\"/node_modules/foo/es/index.js\\";
export { foo };"
`;

exports[`handles exported literals 1`] = `
"import './ui-bootstrap.tpls.js';
export default \\"ui.bootstrap\\";"
`;

exports[`handles mixed module.exports = require(...) and spare require(...) 1`] = `
"import _require from \\"../../modules/_core/index.js\\";
import \\"../../modules/es6.object.keys.js\\";
export default _require.Object.keys;"
`;

exports[`handles module.exports = require(...) 1`] = `
"import _require from \\"./bar.js\\";
export default _require;"
`;

exports[`handles require() from directory 1`] = `
"import _require from \\"/node_modules/core-js/library/fn/symbol/index.js\\";
export default {
  \\"default\\": _require,
  __esModule: true
};"
`;

exports[`ignores node package exporting non-js code 1`] = `"export default \\"bar\\";"`;

exports[`ignores non JavaScript modules by default 1`] = `"import bar from \\"./bar.js\\";"`;

exports[`modules exporting a json file 1`] = `
"import _require from './bar.json';
export default _require;"
`;

exports[`modules exporting a json file 2`] = `"export default {\\"x\\":1};"`;

exports[`prioritizes JavaScript modules over directories 1`] = `"import foo from \\"./foo.js\\";"`;

exports[`replaces top-level require() with import statement 1`] = `
"import \\"./angular.js\\";
export default angular;"
`;

exports[`resolves modules without extension 1`] = `"import foo from \\"/node_modules/@foo/foo.js\\";"`;

exports[`resolves user modules with missing extension 1`] = `"import foo from \\"./foo.js\\";"`;

exports[`skips module processing when ?nomodule=true 1`] = `"import foo from \\"foo\\";"`;

exports[`supports \`jsnext:main\` key in package.json 1`] = `"import foo from \\"/node_modules/foo/es/index.js\\";"`;

exports[`supports \`module\` key in package.json 1`] = `"import foo from \\"/node_modules/foo/es/index.js\\";"`;

exports[`supports commonjs modules 1`] = `"import foo from \\"/node_modules/foo/dist/index.js\\";"`;

exports[`supports commonjs modules 2`] = `
"const module = {
  exports: {}
};
const exports = module.exports;
!function (e, t) {
  t(exports);
}(this, function (e) {
  e.foo = 'bar';
});
const x = 1;
export const foo = exports.foo;
export default module.exports;"
`;

exports[`supports fine-grained import from package 1`] = `"import foo from \\"/node_modules/@foo/foo.js\\";"`;

exports[`supports named exports 1`] = `
"const module = {
  exports: {}
};
const exports = module.exports;
!function (t) {
  t(exports);
}(function (e) {
  e.bar = 'foo';
});
export const bar = exports.bar;
export default module.exports;"
`;

exports[`supports named exports wrapped within a sequence expression 1`] = `
"const module = {
  exports: {}
};
const exports = module.exports;
!function (e, t) {
  \\"object\\" == typeof exports && \\"undefined\\" != typeof module ? t(exports) : \\"function\\" == typeof define && define.amd ? define([\\"exports\\"], t) : t(e.reduxLogger = e.reduxLogger || {});
}(this, function (e) {
  \\"use strict\\";

  e.defaults = L, e.createLogger = S, e.logger = T, e.default = T, Object.defineProperty(e, \\"__esModule\\", {
    value: !0
  });
});
export const defaults = exports.defaults;
export const createLogger = exports.createLogger;
export const logger = exports.logger;
export default exports.default;"
`;

exports[`variable declaration with more than one declarator 1`] = `
"import t from \\"./t.js\\";
import y from \\"./y.js\\";"
`;

exports[`yet another (simplified) umd use case from package type-detect 1`] = `
"const module = {
  exports: {}
};
const exports = module.exports;

(function (global, factory) {
  module.exports = factory();
})(this, function () {});

export default module.exports;"
`;
